"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/api/ai/venice",{

/***/ "(middleware)/./pages/api/ai/venice.ts":
/*!********************************!*\
  !*** ./pages/api/ai/venice.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(middleware)/./node_modules/openai/index.mjs\");\n\nconst runtime = \"edge\";\nasync function handler(request) {\n    const json = await request.json();\n    console.log(\"Received request:\", json);\n    const { messages } = json;\n    try {\n        const venice = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            apiKey: \"SqhtAiao1_nKj4E6nP1u-N83xOqnavXV-E6RpGyIgP\",\n            baseURL: \"https://api.venice.ai\"\n        });\n        const functions = [];\n        // const tools = functions.map(f => ({ type: \"function\", function: f }));\n        const response = await venice.chat.completions.create({\n            model: \"llama-3.1-405b\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"You are an AI assistant.\"\n                },\n                ...messages\n            ],\n            stream: false\n        });\n        console.log(\"Venice API Response:\", response);\n        let finalResponse = response.choices[0].message;\n        let json_response = {\n            id: response.id,\n            object: \"chat.completion\",\n            created: Math.floor(Date.now() / 1000),\n            model: \"llama-3.1-405b\",\n            choices: [\n                {\n                    index: 0,\n                    message: finalResponse,\n                    finish_reason: response.choices[0].finish_reason\n                }\n            ],\n            usage: response.usage\n        };\n        console.log(\"Sending response:\", json_response);\n        return new Response(JSON.stringify(json_response), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in API call:\", error);\n        let errorMessage = error.message || \"An unexpected error occurred\";\n        const errorCode = error.status || 500;\n        if (errorMessage.toLowerCase().includes(\"api key not found\")) {\n            errorMessage = \"API Key not found. Please check your configuration.\";\n        } else if (errorCode === 401) {\n            errorMessage = \"API Key is incorrect. Please check your configuration.\";\n        }\n        return new Response(JSON.stringify({\n            message: errorMessage\n        }), {\n            status: errorCode,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vcGFnZXMvYXBpL2FpL3ZlbmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFckIsTUFBTUMsVUFBVSxPQUFPO0FBRWYsZUFBZUMsUUFBUUMsT0FBZ0I7SUFDcEQsTUFBTUMsT0FBTyxNQUFNRCxRQUFRQyxJQUFJO0lBQy9CQyxRQUFRQyxHQUFHLENBQUMscUJBQXFCRjtJQUNqQyxNQUFNLEVBQUVHLFFBQVEsRUFBRSxHQUFHSDtJQUVyQixJQUFJO1FBQ0YsTUFBTUksU0FBUyxJQUFJUiw4Q0FBTUEsQ0FBQztZQUN4QlMsUUFBUTtZQUNSQyxTQUFTO1FBQ1g7UUFFQSxNQUFNQyxZQUFZLEVBQUU7UUFFcEIseUVBQXlFO1FBRXpFLE1BQU1DLFdBQVcsTUFBTUosT0FBT0ssSUFBSSxDQUFDQyxXQUFXLENBQUNDLE1BQU0sQ0FBQztZQUNwREMsT0FBTztZQUNQVCxVQUFVO2dCQUNSO29CQUNFVSxNQUFNO29CQUNOQyxTQUFTO2dCQUNYO21CQUNHWDthQUNKO1lBQ0RZLFFBQVE7UUFDVjtRQUVBZCxRQUFRQyxHQUFHLENBQUMsd0JBQXdCTTtRQUVwQyxJQUFJUSxnQkFBZ0JSLFNBQVNTLE9BQU8sQ0FBQyxFQUFFLENBQUNDLE9BQU87UUFFL0MsSUFBSUMsZ0JBQWdCO1lBQ2xCQyxJQUFJWixTQUFTWSxFQUFFO1lBQ2ZDLFFBQVE7WUFDUkMsU0FBU0MsS0FBS0MsS0FBSyxDQUFDQyxLQUFLQyxHQUFHLEtBQUs7WUFDakNkLE9BQU87WUFDUEssU0FBUztnQkFDUDtvQkFDRVUsT0FBTztvQkFDUFQsU0FBU0Y7b0JBQ1RZLGVBQWVwQixTQUFTUyxPQUFPLENBQUMsRUFBRSxDQUFDVyxhQUFhO2dCQUNsRDthQUNEO1lBQ0RDLE9BQU9yQixTQUFTcUIsS0FBSztRQUN2QjtRQUVBNUIsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQmlCO1FBRWpDLE9BQU8sSUFBSVcsU0FBU0MsS0FBS0MsU0FBUyxDQUFDYixnQkFBZ0I7WUFDakRjLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7UUFDRjtJQUVGLEVBQUUsT0FBT0MsT0FBWTtRQUNuQmxDLFFBQVFrQyxLQUFLLENBQUMsc0JBQXNCQTtRQUNwQyxJQUFJQyxlQUFlRCxNQUFNakIsT0FBTyxJQUFJO1FBQ3BDLE1BQU1tQixZQUFZRixNQUFNRixNQUFNLElBQUk7UUFDbEMsSUFBSUcsYUFBYUUsV0FBVyxHQUFHQyxRQUFRLENBQUMsc0JBQXNCO1lBQzVESCxlQUFlO1FBQ2pCLE9BQU8sSUFBSUMsY0FBYyxLQUFLO1lBQzVCRCxlQUFlO1FBQ2pCO1FBQ0EsT0FBTyxJQUFJTixTQUFTQyxLQUFLQyxTQUFTLENBQUM7WUFBRWQsU0FBU2tCO1FBQWEsSUFBSTtZQUM3REgsUUFBUUk7WUFDUkgsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvYXBpL2FpL3ZlbmljZS50cz85OWZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcGVuQUkgZnJvbSBcIm9wZW5haVwiO1xuXG5leHBvcnQgY29uc3QgcnVudGltZSA9IFwiZWRnZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcXVlc3Q6IFJlcXVlc3QpIHtcbiAgY29uc3QganNvbiA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgcmVxdWVzdDonLCBqc29uKTtcbiAgY29uc3QgeyBtZXNzYWdlcyB9ID0ganNvbiBhcyB7IG1lc3NhZ2VzOiBhbnlbXSB9O1xuXG4gIHRyeSB7XG4gICAgY29uc3QgdmVuaWNlID0gbmV3IE9wZW5BSSh7XG4gICAgICBhcGlLZXk6IFwiU3FodEFpYW8xX25LajRFNm5QMXUtTjgzeE9xbmF2WFYtRTZScEd5SWdQXCIsXG4gICAgICBiYXNlVVJMOiBcImh0dHBzOi8vYXBpLnZlbmljZS5haVwiXG4gICAgfSk7XG5cbiAgICBjb25zdCBmdW5jdGlvbnMgPSBbXTtcblxuICAgIC8vIGNvbnN0IHRvb2xzID0gZnVuY3Rpb25zLm1hcChmID0+ICh7IHR5cGU6IFwiZnVuY3Rpb25cIiwgZnVuY3Rpb246IGYgfSkpO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB2ZW5pY2UuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xuICAgICAgbW9kZWw6ICdsbGFtYS0zLjEtNDA1YicsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogXCJzeXN0ZW1cIixcbiAgICAgICAgICBjb250ZW50OiBcIllvdSBhcmUgYW4gQUkgYXNzaXN0YW50LlwiXG4gICAgICAgIH0sXG4gICAgICAgIC4uLm1lc3NhZ2VzXG4gICAgICBdLFxuICAgICAgc3RyZWFtOiBmYWxzZVxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coJ1ZlbmljZSBBUEkgUmVzcG9uc2U6JywgcmVzcG9uc2UpO1xuXG4gICAgbGV0IGZpbmFsUmVzcG9uc2UgPSByZXNwb25zZS5jaG9pY2VzWzBdLm1lc3NhZ2U7XG5cbiAgICBsZXQganNvbl9yZXNwb25zZSA9IHtcbiAgICAgIGlkOiByZXNwb25zZS5pZCxcbiAgICAgIG9iamVjdDogXCJjaGF0LmNvbXBsZXRpb25cIixcbiAgICAgIGNyZWF0ZWQ6IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApLFxuICAgICAgbW9kZWw6IFwibGxhbWEtMy4xLTQwNWJcIixcbiAgICAgIGNob2ljZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGluZGV4OiAwLFxuICAgICAgICAgIG1lc3NhZ2U6IGZpbmFsUmVzcG9uc2UsXG4gICAgICAgICAgZmluaXNoX3JlYXNvbjogcmVzcG9uc2UuY2hvaWNlc1swXS5maW5pc2hfcmVhc29uXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICB1c2FnZTogcmVzcG9uc2UudXNhZ2UsXG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKCdTZW5kaW5nIHJlc3BvbnNlOicsIGpzb25fcmVzcG9uc2UpO1xuXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShqc29uX3Jlc3BvbnNlKSwge1xuICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQVBJIGNhbGw6JywgZXJyb3IpO1xuICAgIGxldCBlcnJvck1lc3NhZ2UgPSBlcnJvci5tZXNzYWdlIHx8IFwiQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZFwiO1xuICAgIGNvbnN0IGVycm9yQ29kZSA9IGVycm9yLnN0YXR1cyB8fCA1MDA7XG4gICAgaWYgKGVycm9yTWVzc2FnZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFwiYXBpIGtleSBub3QgZm91bmRcIikpIHtcbiAgICAgIGVycm9yTWVzc2FnZSA9IFwiQVBJIEtleSBub3QgZm91bmQuIFBsZWFzZSBjaGVjayB5b3VyIGNvbmZpZ3VyYXRpb24uXCI7XG4gICAgfSBlbHNlIGlmIChlcnJvckNvZGUgPT09IDQwMSkge1xuICAgICAgZXJyb3JNZXNzYWdlID0gXCJBUEkgS2V5IGlzIGluY29ycmVjdC4gUGxlYXNlIGNoZWNrIHlvdXIgY29uZmlndXJhdGlvbi5cIjtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IG1lc3NhZ2U6IGVycm9yTWVzc2FnZSB9KSwge1xuICAgICAgc3RhdHVzOiBlcnJvckNvZGUsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufSJdLCJuYW1lcyI6WyJPcGVuQUkiLCJydW50aW1lIiwiaGFuZGxlciIsInJlcXVlc3QiLCJqc29uIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2VzIiwidmVuaWNlIiwiYXBpS2V5IiwiYmFzZVVSTCIsImZ1bmN0aW9ucyIsInJlc3BvbnNlIiwiY2hhdCIsImNvbXBsZXRpb25zIiwiY3JlYXRlIiwibW9kZWwiLCJyb2xlIiwiY29udGVudCIsInN0cmVhbSIsImZpbmFsUmVzcG9uc2UiLCJjaG9pY2VzIiwibWVzc2FnZSIsImpzb25fcmVzcG9uc2UiLCJpZCIsIm9iamVjdCIsImNyZWF0ZWQiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwiaW5kZXgiLCJmaW5pc2hfcmVhc29uIiwidXNhZ2UiLCJSZXNwb25zZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdGF0dXMiLCJoZWFkZXJzIiwiZXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckNvZGUiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./pages/api/ai/venice.ts\n");

/***/ })

});