"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/api/ai/venice",{

/***/ "(middleware)/./pages/api/ai/venice.ts":
/*!********************************!*\
  !*** ./pages/api/ai/venice.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(middleware)/./node_modules/openai/index.mjs\");\n\nconst runtime = \"edge\";\nasync function handler(request) {\n    try {\n        // Parse the incoming request JSON.\n        const json = await request.json();\n        console.log(\"Received request:\", json);\n        const { messages } = json;\n        if (!messages || !Array.isArray(messages)) {\n            return new Response(JSON.stringify({\n                message: \"Invalid payload: messages must be an array.\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // Initialize the Venice client.\n        const venice = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            apiKey: process.env.VENICE_API_KEY,\n            baseURL: \"https://api.venice.ai/api/v1\"\n        });\n        // Create the chat completion request.\n        const response = await venice.chat.completions.create({\n            model: \"deepseek-r1-llama-70b\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"You are an intelligent AI assistant.\"\n                },\n                ...messages\n            ],\n            stream: false\n        });\n        console.log(\"Venice API Response:\", response);\n        // Ensure response.choices exists and is a non-empty array.\n        if (!Array.isArray(response?.choices) || response.choices.length === 0) {\n            console.error(\"Unexpected response structure. Type:\", typeof response, \"Response:\", response);\n            throw new Error(\"No choices returned from API.\");\n        }\n        const finalChoice = response.choices[0];\n        if (!finalChoice?.message) {\n            console.error(\"Final choice has no message:\", finalChoice);\n            throw new Error(\"No message returned in the first choice.\");\n        }\n        // Construct the final JSON response.\n        const jsonResponse = {\n            id: response.id,\n            object: \"chat.completion\",\n            created: Math.floor(Date.now() / 1000),\n            model: \"deepseek-r1-llama-70b\",\n            choices: [\n                {\n                    index: 0,\n                    message: finalChoice.message,\n                    finish_reason: finalChoice.finish_reason\n                }\n            ],\n            usage: response.usage\n        };\n        console.log(\"Sending response:\", jsonResponse);\n        return new Response(JSON.stringify(jsonResponse), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in API call:\", error);\n        let errorMessage = error.message || \"An unexpected error occurred\";\n        const errorCode = error.status || 500;\n        if (errorMessage.toLowerCase().includes(\"api key not found\")) {\n            errorMessage = \"API Key not found. Please check your configuration.\";\n        } else if (errorCode === 401) {\n            errorMessage = \"API Key is incorrect. Please check your configuration.\";\n        }\n        return new Response(JSON.stringify({\n            message: errorMessage\n        }), {\n            status: errorCode,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9wZW5BSSBmcm9tIFwib3BlbmFpXCI7XG5cbmV4cG9ydCBjb25zdCBydW50aW1lID0gXCJlZGdlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxdWVzdDogUmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIFBhcnNlIHRoZSBpbmNvbWluZyByZXF1ZXN0IEpTT04uXG4gICAgY29uc3QganNvbiA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIGNvbnNvbGUubG9nKFwiUmVjZWl2ZWQgcmVxdWVzdDpcIiwganNvbik7XG4gICAgY29uc3QgeyBtZXNzYWdlcyB9ID0ganNvbiBhcyB7IG1lc3NhZ2VzOiBhbnlbXSB9O1xuXG4gICAgaWYgKCFtZXNzYWdlcyB8fCAhQXJyYXkuaXNBcnJheShtZXNzYWdlcykpIHtcbiAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoXG4gICAgICAgIEpTT04uc3RyaW5naWZ5KHsgbWVzc2FnZTogXCJJbnZhbGlkIHBheWxvYWQ6IG1lc3NhZ2VzIG11c3QgYmUgYW4gYXJyYXkuXCIgfSksXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICBoZWFkZXJzOiB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgVmVuaWNlIGNsaWVudC5cbiAgICBjb25zdCB2ZW5pY2UgPSBuZXcgT3BlbkFJKHtcbiAgICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuVkVOSUNFX0FQSV9LRVksXG4gICAgICBiYXNlVVJMOiBcImh0dHBzOi8vYXBpLnZlbmljZS5haS9hcGkvdjFcIixcbiAgICB9KTtcblxuICAgIC8vIENyZWF0ZSB0aGUgY2hhdCBjb21wbGV0aW9uIHJlcXVlc3QuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB2ZW5pY2UuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xuICAgICAgbW9kZWw6IFwiZGVlcHNlZWstcjEtbGxhbWEtNzBiXCIsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogXCJzeXN0ZW1cIixcbiAgICAgICAgICBjb250ZW50OiBcIllvdSBhcmUgYW4gaW50ZWxsaWdlbnQgQUkgYXNzaXN0YW50LlwiLFxuICAgICAgICB9LFxuICAgICAgICAuLi5tZXNzYWdlcyxcbiAgICAgIF0sXG4gICAgICBzdHJlYW06IGZhbHNlLFxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coXCJWZW5pY2UgQVBJIFJlc3BvbnNlOlwiLCByZXNwb25zZSk7XG5cbiAgICAvLyBFbnN1cmUgcmVzcG9uc2UuY2hvaWNlcyBleGlzdHMgYW5kIGlzIGEgbm9uLWVtcHR5IGFycmF5LlxuICAgIGlmICghQXJyYXkuaXNBcnJheShyZXNwb25zZT8uY2hvaWNlcykgfHwgcmVzcG9uc2UuY2hvaWNlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmV4cGVjdGVkIHJlc3BvbnNlIHN0cnVjdHVyZS4gVHlwZTpcIiwgdHlwZW9mIHJlc3BvbnNlLCBcIlJlc3BvbnNlOlwiLCByZXNwb25zZSk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBjaG9pY2VzIHJldHVybmVkIGZyb20gQVBJLlwiKTtcbiAgICB9XG5cbiAgICBjb25zdCBmaW5hbENob2ljZSA9IHJlc3BvbnNlLmNob2ljZXNbMF07XG4gICAgaWYgKCFmaW5hbENob2ljZT8ubWVzc2FnZSkge1xuICAgICAgY29uc29sZS5lcnJvcihcIkZpbmFsIGNob2ljZSBoYXMgbm8gbWVzc2FnZTpcIiwgZmluYWxDaG9pY2UpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gbWVzc2FnZSByZXR1cm5lZCBpbiB0aGUgZmlyc3QgY2hvaWNlLlwiKTtcbiAgICB9XG5cbiAgICAvLyBDb25zdHJ1Y3QgdGhlIGZpbmFsIEpTT04gcmVzcG9uc2UuXG4gICAgY29uc3QganNvblJlc3BvbnNlID0ge1xuICAgICAgaWQ6IHJlc3BvbnNlLmlkLFxuICAgICAgb2JqZWN0OiBcImNoYXQuY29tcGxldGlvblwiLFxuICAgICAgY3JlYXRlZDogTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCksXG4gICAgICBtb2RlbDogXCJkZWVwc2Vlay1yMS1sbGFtYS03MGJcIixcbiAgICAgIGNob2ljZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGluZGV4OiAwLFxuICAgICAgICAgIG1lc3NhZ2U6IGZpbmFsQ2hvaWNlLm1lc3NhZ2UsXG4gICAgICAgICAgZmluaXNoX3JlYXNvbjogZmluYWxDaG9pY2UuZmluaXNoX3JlYXNvbixcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgICB1c2FnZTogcmVzcG9uc2UudXNhZ2UsXG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKFwiU2VuZGluZyByZXNwb25zZTpcIiwganNvblJlc3BvbnNlKTtcblxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoanNvblJlc3BvbnNlKSwge1xuICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICBoZWFkZXJzOiB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgfSk7XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgaW4gQVBJIGNhbGw6XCIsIGVycm9yKTtcbiAgICBsZXQgZXJyb3JNZXNzYWdlID0gZXJyb3IubWVzc2FnZSB8fCBcIkFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWRcIjtcbiAgICBjb25zdCBlcnJvckNvZGUgPSBlcnJvci5zdGF0dXMgfHwgNTAwO1xuXG4gICAgaWYgKGVycm9yTWVzc2FnZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFwiYXBpIGtleSBub3QgZm91bmRcIikpIHtcbiAgICAgIGVycm9yTWVzc2FnZSA9IFwiQVBJIEtleSBub3QgZm91bmQuIFBsZWFzZSBjaGVjayB5b3VyIGNvbmZpZ3VyYXRpb24uXCI7XG4gICAgfSBlbHNlIGlmIChlcnJvckNvZGUgPT09IDQwMSkge1xuICAgICAgZXJyb3JNZXNzYWdlID0gXCJBUEkgS2V5IGlzIGluY29ycmVjdC4gUGxlYXNlIGNoZWNrIHlvdXIgY29uZmlndXJhdGlvbi5cIjtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgbWVzc2FnZTogZXJyb3JNZXNzYWdlIH0pLCB7XG4gICAgICBzdGF0dXM6IGVycm9yQ29kZSxcbiAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk9wZW5BSSIsInJ1bnRpbWUiLCJoYW5kbGVyIiwicmVxdWVzdCIsImpzb24iLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZXMiLCJBcnJheSIsImlzQXJyYXkiLCJSZXNwb25zZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJtZXNzYWdlIiwic3RhdHVzIiwiaGVhZGVycyIsInZlbmljZSIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJWRU5JQ0VfQVBJX0tFWSIsImJhc2VVUkwiLCJyZXNwb25zZSIsImNoYXQiLCJjb21wbGV0aW9ucyIsImNyZWF0ZSIsIm1vZGVsIiwicm9sZSIsImNvbnRlbnQiLCJzdHJlYW0iLCJjaG9pY2VzIiwibGVuZ3RoIiwiZXJyb3IiLCJFcnJvciIsImZpbmFsQ2hvaWNlIiwianNvblJlc3BvbnNlIiwiaWQiLCJvYmplY3QiLCJjcmVhdGVkIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImluZGV4IiwiZmluaXNoX3JlYXNvbiIsInVzYWdlIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JDb2RlIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./pages/api/ai/venice.ts\n");

/***/ })

});